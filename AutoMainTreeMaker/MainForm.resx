<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richVar.Text" xml:space="preserve">
    <value>
PUSCH Power
PUCCH Power
SRS Power
Total Tx Power
Power Headroom


DL MCS0
DL MCS1
DL Modulation0
DL Modulation1
PDSCH PRB Number
PDSCH BLER

DL MCS0
DL MCS1
DL Modulation0
DL Modulation1
PDSCH PRB Number
PDSCH BLER

UL MCS
UL Modulation
PUSCH PRB Number
PUSCH BLER</value>
  </data>
  <data name="richGubun.Text" xml:space="preserve">
    <value>GL_CODE
LTEMTKL1DLMCS0
LTEMTKL1DLMCS1
LTEMTKL1DLMOD0
LTEMTKL1DLMOD1
LTEMTKL1PRBNUM
LTEMTKL1BLER
LTEMTKLTHPPDSCHPC
LTEMTKLTHPPDSCHSC
LTEMTKLTHPPDSCHALL
LTEMTKL1ULMCS
LTEMTKL1ULMOD
LTEMTKL1ULPRBNUM
LTEMTKL1ULBLER
AASAS
LTEMTKLTHPMACDL
LTEMTKLTHPMACUL
LTEMTKLTHPRLCDL
LTEMTKLTHPRLCUL
LTEMTKLTHPDCPDL
LTEMTKLTHPDCPUL
GL_CODE
LTEMTKPPOUCTHTOT
LTEMTKPPOUCTH100DB
LTEMTKPPOUCDIFF3DB
LTEMTKPPOUCTHNEW</value>
  </data>
  <data name="richCol.Text" xml:space="preserve">
    <value>
PUSCH Power
PUCCH Power
SRS Power
Total Tx Power
Power Headroom


DL MCS0
DL MCS1
DL Modulation0
DL Modulation1
PDSCH PRB Number
PDSCH BLER

DL MCS0
DL MCS1
DL Modulation0
DL Modulation1
PDSCH PRB Number
PDSCH BLER

UL MCS
UL Modulation
PUSCH PRB Number
PUSCH BLER</value>
  </data>
  <data name="richEnum.Text" xml:space="preserve">
    <value>793520000
793520100
793520200
793520300
793520400
793520500
793530000
793530050
793530100
793530200
793530300
793530400
793530500
793530600
793530700
793530800
793530900
793531000
793531100
793531200
793531300
793540000
793540100
793540200
793540300
793540400</value>
  </data>
  <data name="richMainTree.Text" xml:space="preserve">
    <value>Tx Power Info
	PUSCH Power
	PUCCH Power
	SRS Power
	Total Tx Power
	Power Headroom
L1 DownIink Info
	PCell
		DL MCS0
		DL MCS1
		DL Modulation0
		DL Modulation1
		PDSCH PRB Number
		PDSCH BLER
	SCell[#] #:1-7
		DL MCS0
		DL MCS1
		DL Modulation0
		DL Modulation1
		PDSCH PRB Number
		PDSCH BLER
L1 Uplink Info
	UL MCS
	UL Modulation
	PUSCH PRB Number
	PUSCH BLER</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>